/**********************************************
 * Arduino Atmega328P code to control a 5V RC 
 * vehicle using:
 * -Ultrasonic Sensor
 * -Line detector Sensor
 * -Bluetooth module
 * -4 DC motors
 * -LED lights
 * Author: Jose Neyra
 **********************************************/

#include<Servo.h>
Servo myservo;

#define ENABLEA 5
#define ENABLEB 6
#define MOTOR1 7
#define MOTOR2 8
#define MOTOR3 9
#define MOTOR4 11
#define LED 13

int rightDistance = 0, leftDistance = 0, middleDistance = 0, Echo = A4, Trig = A5;
unsigned char carSpeed = 200;
bool state = LOW;
char getstr;

void forward(){ 
  analogWrite(ENABLEA, carSpeed);
  analogWrite(ENABLEB, carSpeed);
  digitalWrite(MOTOR1,HIGH);
  digitalWrite(MOTOR2,LOW);
  digitalWrite(MOTOR3,LOW);
  digitalWrite(MOTOR4,HIGH);
  Serial.println("Forward");
}

void back(){
  analogWrite(ENABLEA, carSpeed);
  analogWrite(ENABLEB, carSpeed);
  digitalWrite(MOTOR1,LOW);
  digitalWrite(MOTOR2,HIGH);
  digitalWrite(MOTOR3,HIGH);
  digitalWrite(MOTOR4,LOW);
  Serial.println("Back");
}

void left(){
  analogWrite(ENABLEA,carSpeed);
  analogWrite(ENABLEB,carSpeed);
  digitalWrite(MOTOR1,LOW);
  digitalWrite(MOTOR2,HIGH);
  digitalWrite(MOTOR3,LOW);
  digitalWrite(MOTOR4,HIGH); 
  Serial.println("Left");
}

void right(){
  analogWrite(ENABLEA,carSpeed);
  analogWrite(ENABLEB,carSpeed);
  digitalWrite(MOTOR1,HIGH);
  digitalWrite(MOTOR2,LOW);
  digitalWrite(MOTOR3,HIGH);
  digitalWrite(MOTOR4,LOW);
  Serial.println("Right");
}

void stop(){
  digitalWrite(ENABLEA,LOW);
  digitalWrite(ENABLEB,LOW);
  Serial.println("Stop!");
}

//Ultrasonic sensor: calculate distance function
int Distance_test() {
  digitalWrite(Trig, LOW);   
  delayMicroseconds(2);
  digitalWrite(Trig, HIGH);  
  delayMicroseconds(20);
  digitalWrite(Trig, LOW);   
  float Fdistance = pulseIn(Echo, HIGH);  
  Fdistance= Fdistance / 58;       
  return (int)Fdistance;
}  

//TURN ON and OFF LED FUNCTION 
void stateChange(){
  state = !state;
  digitalWrite(LED, state);
  Serial.println("Light");  
}

void autoPilot(){
char conti;
  
  myservo.write(90);  
    delay(500); 
    
    loop:
    middleDistance = Distance_test();

      if(middleDistance <= 30) {     
      stop();
      delay(500);                         
      myservo.write(10);          
      delay(1000);      
      rightDistance = Distance_test();
      
      delay(500);
      myservo.write(90);              
      delay(1000);                                                  
      myservo.write(180);              
      delay(1000); 
      leftDistance = Distance_test();
      
      delay(500);
      myservo.write(90);              
      delay(1000);
      if(rightDistance > leftDistance) {
        back();
        delay (200);
        right();
        delay(360);
      }
      else if(rightDistance < leftDistance) {
        back();
        delay (200);
        left();
        delay(360);
      }
      else if((rightDistance <= 30) || (leftDistance <= 30)) {
        back();
        delay(180);
      }
      else {
        forward();
      }
    }  
    else {
        forward();
    }
    delay (50);
    conti = Serial.read();
    if (conti == 's');  
    else goto loop;
}

void setup() { 
  Serial.begin(9600);
  myservo.attach(3); 
  pinMode(Echo, INPUT);    
  pinMode(Trig, OUTPUT);  
  pinMode(LED, OUTPUT); 
  pinMode(IN1,OUTPUT);
  pinMode(IN2,OUTPUT);
  pinMode(IN3,OUTPUT);
  pinMode(IN4,OUTPUT);
  pinMode(ENA,OUTPUT);
  pinMode(ENB,OUTPUT);
  stop();
}

void loop() { 
  getstr = Serial.read();
  switch(getstr){
    case 'f': forward(); break;
    case 'b': back();   break;
    case 'l': left();   break;
    case 'r': right();  break;
    case 's': stop();   break;
    case 'a': stateChange(); break;
    case 'p': autoPilot();   break; 
     default:  break;
  }
}
